{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/filter1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Filter({\n  name,\n  min,\n  max,\n  onFilterChange,\n  data\n}) {\n  _s();\n  const [filterValues, setFilterValues] = useState({\n    min,\n    max\n  });\n  const [selection, setSelection] = useState({\n    start: null,\n    end: null\n  });\n  const handleInputChange = (e, type) => {\n    const inputValue = e.target.value;\n    if (inputValue === \"\") {\n      setFilterValues({\n        ...filterValues,\n        [type]: \"\"\n      });\n      return;\n    }\n    const newValue = Number(inputValue);\n    if (!isNaN(newValue)) {\n      setFilterValues(prev => ({\n        ...prev,\n        [type]: newValue\n      }));\n    }\n  };\n  const handleInputBlur = type => {\n    let newValue = filterValues[type] === \"\" ? type === \"min\" ? min : max : filterValues[type];\n    if (type === \"min\") {\n      newValue = Math.min(Math.max(newValue, min), filterValues.max);\n    } else {\n      newValue = Math.max(Math.min(newValue, max), filterValues.min);\n    }\n    setFilterValues(prev => ({\n      ...prev,\n      [type]: newValue\n    }));\n    onFilterChange(name, {\n      ...filterValues,\n      [type]: newValue\n    });\n  };\n  const handleBarSelect = (event, elements) => {\n    if (elements.length > 0) {\n      const clickedIndex = elements[0].index;\n      const clickedValue = min + clickedIndex;\n      if (selection.start === null || selection.end !== null) {\n        setSelection({\n          start: clickedValue,\n          end: null\n        });\n      } else {\n        const start = Math.min(selection.start, clickedValue);\n        const end = Math.max(selection.start, clickedValue);\n        setSelection({\n          start: null,\n          end: null\n        });\n        setFilterValues({\n          min: start,\n          max: end\n        });\n        onFilterChange(name, {\n          min: start,\n          max: end\n        });\n      }\n    }\n  };\n\n  // Prepare data for the histogram\n  const histogramData = Array.from({\n    length: max - min + 1\n  }, (_, i) => min + i).map(value => data.filter(item => item === value).length);\n  const chartData = {\n    labels: Array.from({\n      length: max - min + 1\n    }, (_, i) => min + i),\n    datasets: [{\n      label: `Frequency of ${name}`,\n      data: histogramData,\n      backgroundColor: ({\n        dataIndex\n      }) => {\n        const value = min + dataIndex;\n        if (selection.start !== null && selection.end === null && value === selection.start || selection.start !== null && selection.end !== null && value >= Math.min(selection.start, selection.end) && value <= Math.max(selection.start, selection.end) || selection.start === null && value >= filterValues.min && value <= filterValues.max) {\n          return \"rgba(255, 99, 132, 0.8)\";\n        }\n        return \"rgba(192, 192, 192, 0.6)\";\n      },\n      borderColor: \"rgba(255, 99, 132, 1)\",\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    onClick: (event, elements) => handleBarSelect(event, elements),\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Values\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Frequency\"\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Min:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: filterValues.min,\n        onChange: e => handleInputChange(e, \"min\"),\n        onBlur: () => handleInputBlur(\"min\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Max:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: filterValues.max,\n        onChange: e => handleInputChange(e, \"max\"),\n        onBlur: () => handleInputBlur(\"max\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Filter, \"mCaUwy0VGtYuyR/zen/bjeEVj3o=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","Bar","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Filter","name","min","max","onFilterChange","data","_s","filterValues","setFilterValues","selection","setSelection","start","end","handleInputChange","e","type","inputValue","target","value","newValue","Number","isNaN","prev","handleInputBlur","Math","handleBarSelect","event","elements","length","clickedIndex","index","clickedValue","histogramData","Array","from","_","i","map","filter","item","chartData","labels","datasets","label","backgroundColor","dataIndex","borderColor","borderWidth","chartOptions","onClick","scales","x","title","display","text","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","options","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/filter1.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register necessary Chart.js components\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Filter({ name, min, max, onFilterChange, data }) {\n  const [filterValues, setFilterValues] = useState({ min, max });\n  const [selection, setSelection] = useState({ start: null, end: null });\n\n  const handleInputChange = (e, type) => {\n    const inputValue = e.target.value;\n    if (inputValue === \"\") {\n      setFilterValues({ ...filterValues, [type]: \"\" });\n      return;\n    }\n    const newValue = Number(inputValue);\n    if (!isNaN(newValue)) {\n      setFilterValues((prev) => ({ ...prev, [type]: newValue }));\n    }\n  };\n\n  const handleInputBlur = (type) => {\n    let newValue =\n      filterValues[type] === \"\" ? (type === \"min\" ? min : max) : filterValues[type];\n    if (type === \"min\") {\n      newValue = Math.min(Math.max(newValue, min), filterValues.max);\n    } else {\n      newValue = Math.max(Math.min(newValue, max), filterValues.min);\n    }\n    setFilterValues((prev) => ({ ...prev, [type]: newValue }));\n    onFilterChange(name, { ...filterValues, [type]: newValue });\n  };\n\n  const handleBarSelect = (event, elements) => {\n    if (elements.length > 0) {\n      const clickedIndex = elements[0].index;\n      const clickedValue = min + clickedIndex;\n\n      if (selection.start === null || selection.end !== null) {\n        setSelection({ start: clickedValue, end: null });\n      } else {\n        const start = Math.min(selection.start, clickedValue);\n        const end = Math.max(selection.start, clickedValue);\n        setSelection({ start: null, end: null });\n        setFilterValues({ min: start, max: end });\n        onFilterChange(name, { min: start, max: end });\n      }\n    }\n  };\n\n  // Prepare data for the histogram\n  const histogramData = Array.from({ length: max - min + 1 }, (_, i) => min + i).map(\n    (value) => data.filter((item) => item === value).length\n  );\n\n  const chartData = {\n    labels: Array.from({ length: max - min + 1 }, (_, i) => min + i),\n    datasets: [\n      {\n        label: `Frequency of ${name}`,\n        data: histogramData,\n        backgroundColor: ({ dataIndex }) => {\n          const value = min + dataIndex;\n          if (\n            (selection.start !== null &&\n              selection.end === null &&\n              value === selection.start) ||\n            (selection.start !== null &&\n              selection.end !== null &&\n              value >= Math.min(selection.start, selection.end) &&\n              value <= Math.max(selection.start, selection.end)) ||\n            (selection.start === null && value >= filterValues.min && value <= filterValues.max)\n          ) {\n            return \"rgba(255, 99, 132, 0.8)\";\n          }\n          return \"rgba(192, 192, 192, 0.6)\";\n        },\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    onClick: (event, elements) => handleBarSelect(event, elements),\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Values\",\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Frequency\",\n        },\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h3>{name}</h3>\n      <div>\n        <label>Min:</label>\n        <input\n          type=\"number\"\n          value={filterValues.min}\n          onChange={(e) => handleInputChange(e, \"min\")}\n          onBlur={() => handleInputBlur(\"min\")}\n        />\n      </div>\n      <div>\n        <label>Max:</label>\n        <input\n          type=\"number\"\n          value={filterValues.max}\n          onChange={(e) => handleInputChange(e, \"max\")}\n          onBlur={() => handleInputBlur(\"max\")}\n        />\n      </div>\n      <div>\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}