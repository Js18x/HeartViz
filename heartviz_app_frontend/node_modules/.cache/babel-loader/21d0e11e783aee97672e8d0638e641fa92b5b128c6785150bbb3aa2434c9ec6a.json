{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/sunburst.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SunburstChart = ({\n  subspaceId\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`);\n        const result = await response.json();\n        if (result.data) {\n          // Transform the data for the sunburst chart\n          const rawData = result.data;\n\n          // Example hierarchy: sex > cp > target\n          const labels = [];\n          const parents = [];\n          const values = [];\n\n          // Create the hierarchy dynamically\n          Object.keys(rawData.sex).forEach(index => {\n            const sex = rawData.sex[index] === 1 ? \"Male\" : \"Female\";\n            const cp = `CP Type ${rawData.cp[index]}`;\n            const target = rawData.target[index] === 1 ? \"Disease\" : \"No Disease\";\n\n            // Add Sex level\n            if (!labels.includes(sex)) {\n              labels.push(sex);\n              parents.push(\"\");\n              values.push(0); // Initialize\n            }\n\n            // Add CP level\n            const cpLabel = `${sex} - ${cp}`;\n            if (!labels.includes(cpLabel)) {\n              labels.push(cpLabel);\n              parents.push(sex);\n              values.push(0); // Initialize\n            }\n\n            // Add Target level\n            const targetLabel = `${cpLabel} - ${target}`;\n            if (!labels.includes(targetLabel)) {\n              labels.push(targetLabel);\n              parents.push(cpLabel);\n              values.push(0); // Initialize\n            }\n\n            // Increment values\n            const targetIndex = labels.indexOf(targetLabel);\n            values[targetIndex] += 1;\n          });\n          setData({\n            labels,\n            parents,\n            values\n          });\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [subspaceId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Sunburst Chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  if (!data.labels || data.labels.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available for the Sunburst Chart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Plot, {\n    data: [{\n      type: \"sunburst\",\n      labels: data.labels,\n      parents: data.parents,\n      values: data.values,\n      branchvalues: \"total\",\n      // \"remainder\" to display as a portion\n      textinfo: \"label+value+percent entry\"\n    }],\n    layout: {\n      title: \"Sunburst Chart Overview\",\n      margin: {\n        t: 50,\n        l: 0,\n        r: 0,\n        b: 0\n      },\n      width: 800,\n      height: 800\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SunburstChart, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = SunburstChart;\nexport default SunburstChart;\nvar _c;\n$RefreshReg$(_c, \"SunburstChart\");","map":{"version":3,"names":["React","useEffect","useState","Plot","jsxDEV","_jsxDEV","SunburstChart","subspaceId","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","result","json","rawData","labels","parents","values","Object","keys","sex","forEach","index","cp","target","includes","push","cpLabel","targetLabel","targetIndex","indexOf","Error","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","type","branchvalues","textinfo","layout","title","margin","t","l","r","b","width","height","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/sunburst.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst SunburstChart = ({ subspaceId }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`\n        );\n        const result = await response.json();\n\n        if (result.data) {\n          // Transform the data for the sunburst chart\n          const rawData = result.data;\n\n          // Example hierarchy: sex > cp > target\n          const labels = [];\n          const parents = [];\n          const values = [];\n\n          // Create the hierarchy dynamically\n          Object.keys(rawData.sex).forEach((index) => {\n            const sex = rawData.sex[index] === 1 ? \"Male\" : \"Female\";\n            const cp = `CP Type ${rawData.cp[index]}`;\n            const target = rawData.target[index] === 1 ? \"Disease\" : \"No Disease\";\n\n            // Add Sex level\n            if (!labels.includes(sex)) {\n              labels.push(sex);\n              parents.push(\"\");\n              values.push(0); // Initialize\n            }\n\n            // Add CP level\n            const cpLabel = `${sex} - ${cp}`;\n            if (!labels.includes(cpLabel)) {\n              labels.push(cpLabel);\n              parents.push(sex);\n              values.push(0); // Initialize\n            }\n\n            // Add Target level\n            const targetLabel = `${cpLabel} - ${target}`;\n            if (!labels.includes(targetLabel)) {\n              labels.push(targetLabel);\n              parents.push(cpLabel);\n              values.push(0); // Initialize\n            }\n\n            // Increment values\n            const targetIndex = labels.indexOf(targetLabel);\n            values[targetIndex] += 1;\n          });\n\n          setData({ labels, parents, values });\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [subspaceId]);\n\n  if (loading) return <div>Loading Sunburst Chart...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!data.labels || data.labels.length === 0) {\n    return <div>No data available for the Sunburst Chart.</div>;\n  }\n\n  return (\n    <Plot\n      data={[\n        {\n          type: \"sunburst\",\n          labels: data.labels,\n          parents: data.parents,\n          values: data.values,\n          branchvalues: \"total\", // \"remainder\" to display as a portion\n          textinfo: \"label+value+percent entry\",\n        },\n      ]}\n      layout={{\n        title: \"Sunburst Chart Overview\",\n        margin: { t: 50, l: 0, r: 0, b: 0 },\n        width: 800,\n        height: 800,\n      }}\n    />\n  );\n};\n\nexport default SunburstChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}