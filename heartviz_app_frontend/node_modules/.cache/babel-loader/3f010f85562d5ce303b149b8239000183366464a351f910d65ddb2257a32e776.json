{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, registerables } from \"chart.js\";\nimport { Heatmap } from \"react-chartjs-2\";\nimport mockCorrelationMatrix from \"../../mockDataM.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(...registerables);\nconst CorrelationMatrixHeatmap = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState(null);\n  useEffect(() => {\n    // Simulate API call by loading mock data\n    setMatrixData(mockCorrelationMatrix.correlation_matrix);\n  }, []);\n  if (!matrixData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract feature names (keys of the correlation matrix)\n  const features = Object.keys(matrixData);\n\n  // Extract matrix values\n  const values = features.map(row => features.map(col => matrixData[row][col]));\n\n  // Generate heatmap chart data\n  const chartData = {\n    labels: features,\n    // Column labels\n    datasets: features.map((feature, index) => ({\n      label: feature,\n      data: values[index],\n      backgroundColor: context => {\n        const value = context.raw;\n        // Color gradient for heatmap (e.g., red to green)\n        return value > 0.5 ? `rgba(0, ${Math.floor(255 * value)}, 0, 0.8)` // Green for positive correlation\n        : `rgba(${Math.floor(255 * Math.abs(value))}, 0, 0, 0.8)`; // Red for negative correlation\n      }\n    }))\n  };\n\n  // Heatmap options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: \"Features\"\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: \"Features\"\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false // Optional: Hide legend\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Correlation Matrix Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heatmap, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CorrelationMatrixHeatmap, \"RFuUktl3r5tXcb6zOsxs5ilumDw=\");\n_c = CorrelationMatrixHeatmap;\nexport default CorrelationMatrixHeatmap;\nvar _c;\n$RefreshReg$(_c, \"CorrelationMatrixHeatmap\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","registerables","Heatmap","mockCorrelationMatrix","jsxDEV","_jsxDEV","register","CorrelationMatrixHeatmap","_s","matrixData","setMatrixData","correlation_matrix","children","fileName","_jsxFileName","lineNumber","columnNumber","features","Object","keys","values","map","row","col","chartData","labels","datasets","feature","index","label","data","backgroundColor","context","value","raw","Math","floor","abs","options","responsive","maintainAspectRatio","scales","x","display","title","text","y","plugins","legend","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, registerables } from \"chart.js\";\nimport { Heatmap } from \"react-chartjs-2\";\nimport mockCorrelationMatrix from \"../../mockDataM.json\";\n\nChartJS.register(...registerables);\n\nconst CorrelationMatrixHeatmap = () => {\n  const [matrixData, setMatrixData] = useState(null);\n\n  useEffect(() => {\n    // Simulate API call by loading mock data\n    setMatrixData(mockCorrelationMatrix.correlation_matrix);\n  }, []);\n\n  if (!matrixData) {\n    return <p>Loading...</p>;\n  }\n\n  // Extract feature names (keys of the correlation matrix)\n  const features = Object.keys(matrixData);\n\n  // Extract matrix values\n  const values = features.map((row) =>\n    features.map((col) => matrixData[row][col])\n  );\n\n  // Generate heatmap chart data\n  const chartData = {\n    labels: features, // Column labels\n    datasets: features.map((feature, index) => ({\n      label: feature,\n      data: values[index],\n      backgroundColor: (context) => {\n        const value = context.raw;\n        // Color gradient for heatmap (e.g., red to green)\n        return value > 0.5\n          ? `rgba(0, ${Math.floor(255 * value)}, 0, 0.8)` // Green for positive correlation\n          : `rgba(${Math.floor(255 * Math.abs(value))}, 0, 0, 0.8)`; // Red for negative correlation\n      },\n    })),\n  };\n\n  // Heatmap options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: \"Features\",\n        },\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: \"Features\",\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false, // Optional: Hide legend\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h1>Correlation Matrix Heatmap</h1>\n      <Heatmap data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default CorrelationMatrixHeatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}