{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./CategoryFilter.css\"; // Import the CSS file for the filter styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryFilter({\n  name,\n  range,\n  onFilterChange\n}) {\n  _s();\n  // Generate categories for the range\n  const categories = Array.from({\n    length: range[1] - range[0] + 1\n  }, (_, i) => range[0] + i);\n  const [selectedCategories, setSelectedCategories] = useState(categories);\n  const handleCategoryChange = category => {\n    const updatedCategories = selectedCategories.includes(category) ? selectedCategories.filter(c => c !== category) : [...selectedCategories, category];\n    setSelectedCategories(updatedCategories);\n    onFilterChange(name, updatedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCategories.includes(category),\n          onChange: () => handleCategoryChange(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), category]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryFilter, \"rbuEksWtC/mh0jRx+l55bIYr+Ww=\");\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CategoryFilter","name","range","onFilterChange","_s","categories","Array","from","length","_","i","selectedCategories","setSelectedCategories","handleCategoryChange","category","updatedCategories","includes","filter","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./CategoryFilter.css\"; // Import the CSS file for the filter styles\n\nfunction CategoryFilter({ name, range, onFilterChange }) {\n  // Generate categories for the range\n  const categories = Array.from(\n    { length: range[1] - range[0] + 1 },\n    (_, i) => range[0] + i\n  );\n\n  const [selectedCategories, setSelectedCategories] = useState(categories);\n\n  const handleCategoryChange = (category) => {\n    const updatedCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter((c) => c !== category)\n      : [...selectedCategories, category];\n\n    setSelectedCategories(updatedCategories);\n    onFilterChange(name, updatedCategories);\n  };\n\n  return (\n    <div className=\"filter\">\n      <h3>{name}</h3>\n      <div>\n        {categories.map((category) => (\n          <label key={category}>\n            <input\n              type=\"checkbox\"\n              checked={selectedCategories.includes(category)}\n              onChange={() => handleCategoryChange(category)}\n            />\n            {category}\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryFilter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvD;EACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAC3B;IAAEC,MAAM,EAAEN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG;EAAE,CAAC,EACnC,CAACO,CAAC,EAAEC,CAAC,KAAKR,KAAK,CAAC,CAAC,CAAC,GAAGQ,CACvB,CAAC;EAED,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAACQ,UAAU,CAAC;EAExE,MAAMQ,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,MAAMC,iBAAiB,GAAGJ,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAC,GAC3DH,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,QAAQ,CAAC,GAChD,CAAC,GAAGH,kBAAkB,EAAEG,QAAQ,CAAC;IAErCF,qBAAqB,CAACG,iBAAiB,CAAC;IACxCZ,cAAc,CAACF,IAAI,EAAEc,iBAAiB,CAAC;EACzC,CAAC;EAED,oBACEhB,OAAA;IAAKoB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBrB,OAAA;MAAAqB,QAAA,EAAKnB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfzB,OAAA;MAAAqB,QAAA,EACGf,UAAU,CAACoB,GAAG,CAAEX,QAAQ,iBACvBf,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UACE2B,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEhB,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAE;UAC/Cc,QAAQ,EAAEA,CAAA,KAAMf,oBAAoB,CAACC,QAAQ;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,EACDV,QAAQ;MAAA,GANCA,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAnCQJ,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}