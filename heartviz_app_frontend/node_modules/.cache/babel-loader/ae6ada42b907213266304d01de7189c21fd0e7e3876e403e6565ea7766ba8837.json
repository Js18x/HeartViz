{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/distributionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DistributionPlot = ({\n  subspaceId\n}) => {\n  _s();\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\"); // Default to global distribution\n  const [attributes, setAttributes] = useState([]);\n  const [rawGlobalDistribution, setRawGlobalDistribution] = useState(null);\n  const [rawLabelWiseDistribution, setRawLabelWiseDistribution] = useState({});\n  const [binSize, setBinSize] = useState(10); // Default bin size\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch available attributes\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: {\n            sub_ind: subspaceId\n          }\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]); // Default to the first attribute\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n    fetchAttributes();\n  }, [subspaceId]);\n  useEffect(() => {\n    if (attribute) {\n      // Fetch global distribution (no binning applied)\n      const fetchGlobalDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspaceId,\n              feature: attribute,\n              by_label: false\n            }\n          });\n          setRawGlobalDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch global distribution.\");\n        }\n      };\n\n      // Fetch label-wise distribution (no binning applied)\n      const fetchLabelWiseDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspaceId,\n              feature: attribute,\n              by_label: true\n            }\n          });\n          setRawLabelWiseDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch label-wise distribution.\");\n        }\n      };\n      fetchGlobalDistribution();\n      fetchLabelWiseDistribution();\n    }\n  }, [attribute, subspaceId]);\n  const applyBinning = (data, binSize) => {\n    if (!data) return {};\n    const values = Object.entries(data).map(([key, value]) => [parseFloat(key), value]);\n    values.sort((a, b) => a[0] - b[0]); // Sort by keys (numerical values)\n\n    const min = values[0][0];\n    const max = values[values.length - 1][0];\n    const bins = Math.ceil((max - min) / binSize);\n    const binnedData = {};\n    for (let i = 0; i <= bins; i++) {\n      const lowerBound = min + i * binSize;\n      const upperBound = lowerBound + binSize;\n      const binKey = `${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;\n      binnedData[binKey] = 0;\n    }\n    values.forEach(([key, count]) => {\n      const binIndex = Math.floor((key - min) / binSize);\n      const lowerBound = min + binIndex * binSize;\n      const upperBound = lowerBound + binSize;\n      const binKey = `${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;\n      binnedData[binKey] += count;\n    });\n    return binnedData;\n  };\n  const plotData = () => {\n    if (label === \"global\" && rawGlobalDistribution) {\n      const binnedData = applyBinning(rawGlobalDistribution, binSize);\n      return [{\n        x: Object.keys(binnedData),\n        y: Object.values(binnedData),\n        type: \"bar\",\n        marker: {\n          color: \"blue\"\n        }\n      }];\n    }\n    if (label !== \"global\" && rawLabelWiseDistribution[label]) {\n      const binnedData = applyBinning(rawLabelWiseDistribution[label], binSize);\n      return [{\n        x: Object.keys(binnedData),\n        y: Object.values(binnedData),\n        type: \"bar\",\n        marker: {\n          color: \"green\"\n        }\n      }];\n    }\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Attribute:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: attribute,\n        onChange: e => setAttribute(e.target.value),\n        children: attributes.map(attr => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: attr,\n          children: attr\n        }, attr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"global\",\n          children: \"Global\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), Object.keys(rawLabelWiseDistribution).map(lbl => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lbl,\n          children: [\"Label \", lbl]\n        }, lbl, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Bin Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: binSize,\n        onChange: e => setBinSize(parseInt(e.target.value, 10)),\n        style: {\n          width: \"60px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), plotData().length > 0 && /*#__PURE__*/_jsxDEV(Plot, {\n      data: plotData(),\n      layout: {\n        title: `Distribution of ${attribute} in relation to ${label === \"global\" ? \"Global\" : `severity rate ${label}`}`,\n        xaxis: {\n          title: attribute,\n          tickangle: 45\n        },\n        yaxis: {\n          title: \"Number of diagnosis\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(DistributionPlot, \"cEotdk51mBYW+TyLPVaYq7XAgdc=\");\n_c = DistributionPlot;\nexport default DistributionPlot;\nvar _c;\n$RefreshReg$(_c, \"DistributionPlot\");","map":{"version":3,"names":["React","useState","useEffect","Plot","axios","jsxDEV","_jsxDEV","DistributionPlot","subspaceId","_s","attribute","setAttribute","label","setLabel","attributes","setAttributes","rawGlobalDistribution","setRawGlobalDistribution","rawLabelWiseDistribution","setRawLabelWiseDistribution","binSize","setBinSize","error","setError","fetchAttributes","response","get","params","sub_ind","Object","keys","data","feature_ranges","err","fetchGlobalDistribution","feature","by_label","fetchLabelWiseDistribution","applyBinning","values","entries","map","key","value","parseFloat","sort","a","b","min","max","length","bins","Math","ceil","binnedData","i","lowerBound","upperBound","binKey","toFixed","forEach","count","binIndex","floor","plotData","x","y","type","marker","color","style","textAlign","padding","children","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","attr","marginLeft","lbl","parseInt","width","layout","title","xaxis","tickangle","yaxis","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/distributionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\n\nconst DistributionPlot = ({ subspaceId }) => {\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\"); // Default to global distribution\n  const [attributes, setAttributes] = useState([]);\n  const [rawGlobalDistribution, setRawGlobalDistribution] = useState(null);\n  const [rawLabelWiseDistribution, setRawLabelWiseDistribution] = useState({});\n  const [binSize, setBinSize] = useState(10); // Default bin size\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch available attributes\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: { sub_ind: subspaceId },\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]); // Default to the first attribute\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n\n    fetchAttributes();\n  }, [subspaceId]);\n\n  useEffect(() => {\n    if (attribute) {\n      // Fetch global distribution (no binning applied)\n      const fetchGlobalDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: { sub_ind: subspaceId, feature: attribute, by_label: false },\n          });\n          setRawGlobalDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch global distribution.\");\n        }\n      };\n\n      // Fetch label-wise distribution (no binning applied)\n      const fetchLabelWiseDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: { sub_ind: subspaceId, feature: attribute, by_label: true },\n          });\n          setRawLabelWiseDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch label-wise distribution.\");\n        }\n      };\n\n      fetchGlobalDistribution();\n      fetchLabelWiseDistribution();\n    }\n  }, [attribute, subspaceId]);\n\n  const applyBinning = (data, binSize) => {\n    if (!data) return {};\n\n    const values = Object.entries(data).map(([key, value]) => [parseFloat(key), value]);\n    values.sort((a, b) => a[0] - b[0]); // Sort by keys (numerical values)\n\n    const min = values[0][0];\n    const max = values[values.length - 1][0];\n    const bins = Math.ceil((max - min) / binSize);\n\n    const binnedData = {};\n    for (let i = 0; i <= bins; i++) {\n      const lowerBound = min + i * binSize;\n      const upperBound = lowerBound + binSize;\n      const binKey = `${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;\n\n      binnedData[binKey] = 0;\n    }\n\n    values.forEach(([key, count]) => {\n      const binIndex = Math.floor((key - min) / binSize);\n      const lowerBound = min + binIndex * binSize;\n      const upperBound = lowerBound + binSize;\n      const binKey = `${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;\n\n      binnedData[binKey] += count;\n    });\n\n    return binnedData;\n  };\n\n  const plotData = () => {\n    if (label === \"global\" && rawGlobalDistribution) {\n      const binnedData = applyBinning(rawGlobalDistribution, binSize);\n      return [\n        {\n          x: Object.keys(binnedData),\n          y: Object.values(binnedData),\n          type: \"bar\",\n          marker: { color: \"blue\" },\n        },\n      ];\n    }\n\n    if (label !== \"global\" && rawLabelWiseDistribution[label]) {\n      const binnedData = applyBinning(rawLabelWiseDistribution[label], binSize);\n      return [\n        {\n          x: Object.keys(binnedData),\n          y: Object.values(binnedData),\n          type: \"bar\",\n          marker: { color: \"green\" },\n        },\n      ];\n    }\n\n    return [];\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <div style={{ marginBottom: \"20px\" }}>\n        <label style={{ marginRight: \"10px\" }}>Attribute:</label>\n        <select value={attribute} onChange={(e) => setAttribute(e.target.value)}>\n          {attributes.map((attr) => (\n            <option key={attr} value={attr}>\n              {attr}\n            </option>\n          ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Label:</label>\n        <select value={label} onChange={(e) => setLabel(e.target.value)}>\n          <option value=\"global\">Global</option>\n          {Object.keys(rawLabelWiseDistribution).map((lbl) => (\n            <option key={lbl} value={lbl}>\n              Label {lbl}\n            </option>\n          ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Bin Size:</label>\n        <input\n          type=\"number\"\n          value={binSize}\n          onChange={(e) => setBinSize(parseInt(e.target.value, 10))}\n          style={{ width: \"60px\" }}\n        />\n      </div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {plotData().length > 0 && (\n        <Plot\n          data={plotData()}\n          layout={{\n            title: `Distribution of ${attribute} in relation to ${\n              label === \"global\" ? \"Global\" : `severity rate ${label}`\n            }`,\n            xaxis: {\n              title: attribute,\n              tickangle: 45,\n            },\n            yaxis: { title: \"Number of diagnosis\" },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DistributionPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}