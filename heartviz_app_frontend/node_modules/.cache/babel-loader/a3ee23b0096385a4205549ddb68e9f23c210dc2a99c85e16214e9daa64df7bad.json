{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/dualDistribution.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DualSubspaceDistributionPlot = ({\n  subspace1Id,\n  subspace2Id\n}) => {\n  _s();\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\");\n  const [attributes, setAttributes] = useState([]);\n  const [binSize, setBinSize] = useState(10);\n  const [tempBinSize, setTempBinSize] = useState(\"10\");\n  const [subspace2Distribution, setSubspace2Distribution] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: {\n            sub_ind: subspace1Id\n          }\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]);\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n    fetchAttributes();\n  }, [subspace1Id]);\n  useEffect(() => {\n    if (attribute) {\n      const fetchDistributions = async () => {\n        try {\n          const subspace1Response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspace1Id,\n              feature: attribute,\n              by_label: true\n            }\n          });\n          const subspace2Response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspace2Id,\n              feature: attribute,\n              by_label: true\n            }\n          });\n          setSubspace1Distribution(subspace1Response.data);\n          setSubspace2Distribution(subspace2Response.data);\n        } catch (err) {\n          setError(\"Failed to fetch distributions.\");\n        }\n      };\n      fetchDistributions();\n    }\n  }, [attribute, subspace1Id, subspace2Id]);\n  const handleBinSizeChange = e => {\n    setTempBinSize(e.target.value);\n  };\n  const handleBinSizeBlur = () => {\n    const value = parseInt(tempBinSize, 10);\n    if (!value || value <= 0) {\n      setBinSize(1);\n      setTempBinSize(\"1\");\n    } else {\n      setBinSize(value);\n      setTempBinSize(String(value));\n    }\n  };\n  const plotData = () => {\n    if (!attribute || !subspace1Distribution || !subspace2Distribution) return [];\n    const data1 = label !== \"global\" ? subspace1Distribution[label] : {};\n    const data2 = label !== \"global\" ? subspace2Distribution[label] : {};\n    if (!data1 || !data2) return [];\n    const getBinnedData = data => {\n      const keys = Object.keys(data).map(k => parseFloat(k));\n      if (keys.length === 0) {\n        return {\n          x: [],\n          y: []\n        };\n      }\n      const min = Math.min(...keys);\n      const max = Math.max(...keys);\n      const bins = Math.ceil((max - min) / binSize);\n      if (bins <= 0 || isNaN(bins)) {\n        return {\n          x: [],\n          y: []\n        };\n      }\n      const binEdges = Array.from({\n        length: bins + 1\n      }, (_, i) => min + i * binSize);\n      const binCounts = Array(bins).fill(0);\n      keys.forEach(key => {\n        const binIndex = Math.min(Math.floor((key - min) / binSize), bins - 1);\n        binCounts[binIndex] += data[key];\n      });\n      return {\n        x: binEdges.slice(0, -1).map((edge, i) => `${edge.toFixed(2)} - ${(edge + binSize).toFixed(2)}`),\n        y: binCounts\n      };\n    };\n    const binnedData1 = getBinnedData(data1);\n    const binnedData2 = getBinnedData(data2);\n    return [{\n      x: binnedData1.x,\n      y: binnedData1.y,\n      name: `Subspace ${subspace1Id}`,\n      type: \"bar\",\n      marker: {\n        color: \"blue\"\n      }\n    }, {\n      x: binnedData2.x,\n      y: binnedData2.y,\n      name: `Subspace ${subspace2Id}`,\n      type: \"bar\",\n      marker: {\n        color: \"orange\"\n      }\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Attribute:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: attribute,\n        onChange: e => setAttribute(e.target.value),\n        children: attributes.map(attr => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: attr,\n          children: attr\n        }, attr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"global\",\n          children: \"Global\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), subspace1Distribution && Object.keys(subspace1Distribution).map(lbl => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lbl,\n          children: [\"Label \", lbl]\n        }, lbl, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Bin Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tempBinSize,\n        onChange: handleBinSizeChange,\n        onBlur: handleBinSizeBlur,\n        style: {\n          width: \"60px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), plotData().length > 0 && /*#__PURE__*/_jsxDEV(Plot, {\n      data: plotData(),\n      layout: {\n        title: `Label-Wise Distribution of ${attribute} for Subspaces ${subspace1Id} and ${subspace2Id}`,\n        xaxis: {\n          title: {\n            text: \"Labels (0, 1, 2, 3, 4)\"\n          }\n        },\n        yaxis: {\n          title: \"Frequency\"\n        },\n        barmode: \"group\",\n        margin: {\n          b: 100\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(DualSubspaceDistributionPlot, \"HAT2kcDsyUlf9SxsuHMPW7r8Hsw=\");\n_c = DualSubspaceDistributionPlot;\nexport default DualSubspaceDistributionPlot;\nvar _c;\n$RefreshReg$(_c, \"DualSubspaceDistributionPlot\");","map":{"version":3,"names":["React","useState","useEffect","Plot","axios","jsxDEV","_jsxDEV","DualSubspaceDistributionPlot","subspace1Id","subspace2Id","_s","attribute","setAttribute","label","setLabel","attributes","setAttributes","binSize","setBinSize","tempBinSize","setTempBinSize","subspace2Distribution","setSubspace2Distribution","error","setError","fetchAttributes","response","get","params","sub_ind","Object","keys","data","feature_ranges","err","fetchDistributions","subspace1Response","feature","by_label","subspace2Response","setSubspace1Distribution","handleBinSizeChange","e","target","value","handleBinSizeBlur","parseInt","String","plotData","subspace1Distribution","data1","data2","getBinnedData","map","k","parseFloat","length","x","y","min","Math","max","bins","ceil","isNaN","binEdges","Array","from","_","i","binCounts","fill","forEach","key","binIndex","floor","slice","edge","toFixed","binnedData1","binnedData2","name","type","marker","color","style","textAlign","padding","children","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","attr","marginLeft","lbl","onBlur","width","layout","title","xaxis","text","yaxis","barmode","margin","b","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/dualDistribution.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\n\nconst DualSubspaceDistributionPlot = ({ subspace1Id, subspace2Id }) => {\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\");\n  const [attributes, setAttributes] = useState([]);\n  const [binSize, setBinSize] = useState(10);\n  const [tempBinSize, setTempBinSize] = useState(\"10\");\n  const [subspace2Distribution, setSubspace2Distribution] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: { sub_ind: subspace1Id },\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]);\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n\n    fetchAttributes();\n  }, [subspace1Id]);\n\n  useEffect(() => {\n    if (attribute) {\n      const fetchDistributions = async () => {\n        try {\n          const subspace1Response = await axios.get(\n            \"http://127.0.0.1:5000/distribution_by_feature\",\n            {\n              params: {\n                sub_ind: subspace1Id,\n                feature: attribute,\n                by_label: true,\n              },\n            }\n          );\n          const subspace2Response = await axios.get(\n            \"http://127.0.0.1:5000/distribution_by_feature\",\n            {\n              params: {\n                sub_ind: subspace2Id,\n                feature: attribute,\n                by_label: true,\n              },\n            }\n          );\n\n          setSubspace1Distribution(subspace1Response.data);\n          setSubspace2Distribution(subspace2Response.data);\n        } catch (err) {\n          setError(\"Failed to fetch distributions.\");\n        }\n      };\n\n      fetchDistributions();\n    }\n  }, [attribute, subspace1Id, subspace2Id]);\n\n  const handleBinSizeChange = (e) => {\n    setTempBinSize(e.target.value);\n  };\n\n  const handleBinSizeBlur = () => {\n    const value = parseInt(tempBinSize, 10);\n    if (!value || value <= 0) {\n      setBinSize(1);\n      setTempBinSize(\"1\");\n    } else {\n      setBinSize(value);\n      setTempBinSize(String(value));\n    }\n  };\n\n  const plotData = () => {\n    if (!attribute || !subspace1Distribution || !subspace2Distribution) return [];\n\n    const data1 = label !== \"global\" ? subspace1Distribution[label] : {};\n    const data2 = label !== \"global\" ? subspace2Distribution[label] : {};\n\n    if (!data1 || !data2) return [];\n\n    const getBinnedData = (data) => {\n      const keys = Object.keys(data).map((k) => parseFloat(k));\n      if (keys.length === 0) {\n        return {\n          x: [],\n          y: [],\n        };\n      }\n    \n      const min = Math.min(...keys);\n      const max = Math.max(...keys);\n    \n      const bins = Math.ceil((max - min) / binSize);\n      if (bins <= 0 || isNaN(bins)) {\n        return {\n          x: [],\n          y: [],\n        };\n      }\n    \n      const binEdges = Array.from({ length: bins + 1 }, (_, i) => min + i * binSize);\n      const binCounts = Array(bins).fill(0);\n    \n      keys.forEach((key) => {\n        const binIndex = Math.min(Math.floor((key - min) / binSize), bins - 1);\n        binCounts[binIndex] += data[key];\n      });\n    \n      return {\n        x: binEdges.slice(0, -1).map((edge, i) => `${edge.toFixed(2)} - ${(edge + binSize).toFixed(2)}`),\n        y: binCounts,\n      };\n    };\n\n    const binnedData1 = getBinnedData(data1);\n    const binnedData2 = getBinnedData(data2);\n\n    return [\n      {\n        x: binnedData1.x,\n        y: binnedData1.y,\n        name: `Subspace ${subspace1Id}`,\n        type: \"bar\",\n        marker: { color: \"blue\" },\n      },\n      {\n        x: binnedData2.x,\n        y: binnedData2.y,\n        name: `Subspace ${subspace2Id}`,\n        type: \"bar\",\n        marker: { color: \"orange\" },\n      },\n    ];\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <div style={{ marginBottom: \"20px\" }}>\n        <label style={{ marginRight: \"10px\" }}>Attribute:</label>\n        <select value={attribute} onChange={(e) => setAttribute(e.target.value)}>\n          {attributes.map((attr) => (\n            <option key={attr} value={attr}>\n              {attr}\n            </option>\n          ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Label:</label>\n        <select value={label} onChange={(e) => setLabel(e.target.value)}>\n          <option value=\"global\">Global</option>\n          {subspace1Distribution &&\n            Object.keys(subspace1Distribution).map((lbl) => (\n              <option key={lbl} value={lbl}>\n                Label {lbl}\n              </option>\n            ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Bin Size:</label>\n        <input\n          type=\"number\"\n          value={tempBinSize}\n          onChange={handleBinSizeChange}\n          onBlur={handleBinSizeBlur}\n          style={{ width: \"60px\" }}\n        />\n      </div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {plotData().length > 0 && (\n        <Plot\n          data={plotData()}\n          layout={{\n            title: `Label-Wise Distribution of ${attribute} for Subspaces ${subspace1Id} and ${subspace2Id}`,\n            xaxis: {\n              title: { text: \"Labels (0, 1, 2, 3, 4)\" },\n            },\n            yaxis: {\n              title: \"Frequency\",\n            },\n            barmode: \"group\",\n            margin: { b: 100 },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DualSubspaceDistributionPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}