{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction CategoryFilter({\n  name,\n  range,\n  onFilterChange,\n  data\n}) {\n  _s();\n  const categories = Array.from({\n    length: range[1] - range[0] + 1\n  }, (_, i) => range[0] + i);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const handleBarSelect = (event, elements) => {\n    if (elements.length > 0) {\n      const clickedIndex = elements[0].index;\n      const clickedCategory = categories[clickedIndex];\n      setSelectedCategories(prevSelected => {\n        const isSelected = prevSelected.includes(clickedCategory);\n        const updatedSelection = isSelected ? prevSelected.filter(category => category !== clickedCategory) : [...prevSelected, clickedCategory];\n        onFilterChange(name, updatedSelection);\n        return updatedSelection;\n      });\n    }\n  };\n\n  // Prepare data for the histogram\n  const histogramData = categories.map(category => data.filter(item => item === category).length);\n  const chartData = {\n    labels: categories,\n    datasets: [{\n      label: `Frequency of ${name}`,\n      data: histogramData,\n      backgroundColor: ({\n        dataIndex\n      }) => {\n        const category = categories[dataIndex];\n        return selectedCategories.includes(category) ? \"rgba(255, 99, 132, 0.8)\" // Highlight selected categories\n        : \"rgba(192, 192, 192, 0.6)\";\n      },\n      borderColor: ({\n        dataIndex\n      }) => {\n        const category = categories[dataIndex];\n        return selectedCategories.includes(category) ? \"rgba(255, 99, 132, 1)\" : \"rgba(192, 192, 192, 1)\";\n      },\n      borderWidth: 2\n    }]\n  };\n  const chartOptions = {\n    onClick: (event, elements) => handleBarSelect(event, elements),\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Categories\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Frequency\"\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Selected Categories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedCategories.length > 0 ? selectedCategories.join(\", \") : \"Click on bars to select categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryFilter, \"KmS+J5COdyZ7xuNCrRYNHKInTu4=\");\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","useState","Bar","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","CategoryFilter","name","range","onFilterChange","data","_s","categories","Array","from","length","_","i","selectedCategories","setSelectedCategories","handleBarSelect","event","elements","clickedIndex","index","clickedCategory","prevSelected","isSelected","includes","updatedSelection","filter","category","histogramData","map","item","chartData","labels","datasets","label","backgroundColor","dataIndex","borderColor","borderWidth","chartOptions","onClick","scales","x","title","display","text","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","join","options","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register necessary Chart.js components\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction CategoryFilter({ name, range, onFilterChange, data }) {\n  const categories = Array.from(\n    { length: range[1] - range[0] + 1 },\n    (_, i) => range[0] + i\n  );\n\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const handleBarSelect = (event, elements) => {\n    if (elements.length > 0) {\n      const clickedIndex = elements[0].index;\n      const clickedCategory = categories[clickedIndex];\n\n      setSelectedCategories((prevSelected) => {\n        const isSelected = prevSelected.includes(clickedCategory);\n        const updatedSelection = isSelected\n          ? prevSelected.filter((category) => category !== clickedCategory)\n          : [...prevSelected, clickedCategory];\n\n        onFilterChange(name, updatedSelection);\n        return updatedSelection;\n      });\n    }\n  };\n\n  // Prepare data for the histogram\n  const histogramData = categories.map((category) =>\n    data.filter((item) => item === category).length\n  );\n\n  const chartData = {\n    labels: categories,\n    datasets: [\n      {\n        label: `Frequency of ${name}`,\n        data: histogramData,\n        backgroundColor: ({ dataIndex }) => {\n          const category = categories[dataIndex];\n          return selectedCategories.includes(category)\n            ? \"rgba(255, 99, 132, 0.8)\" // Highlight selected categories\n            : \"rgba(192, 192, 192, 0.6)\";\n        },\n        borderColor: ({ dataIndex }) => {\n          const category = categories[dataIndex];\n          return selectedCategories.includes(category)\n            ? \"rgba(255, 99, 132, 1)\"\n            : \"rgba(192, 192, 192, 1)\";\n        },\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    onClick: (event, elements) => handleBarSelect(event, elements),\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Categories\",\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Frequency\",\n        },\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h3>{name}</h3>\n      <div>\n        <label>Selected Categories:</label>\n        <span>\n          {selectedCategories.length > 0\n            ? selectedCategories.join(\", \")\n            : \"Click on bars to select categories\"}\n        </span>\n      </div>\n      <div>\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}