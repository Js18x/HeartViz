{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/parallelPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParallelCoordinatesPlot = ({\n  subspaceId\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Fetching data for Parallel Coordinates Plot for Subspace ID:\", subspaceId);\n        if (!subspaceId) {\n          throw new Error(\"Subspace ID is missing.\");\n        }\n\n        // Fetch the data from the backend\n        const response = await fetch(`http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`);\n        const result = await response.json();\n        if (result.data) {\n          setData(result.data); // Store the fetched data\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [subspaceId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Parallel Coordinates Plot...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  if (!data || Object.keys(data).length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 55\n  }, this);\n\n  // Transform the data for Parallel Coordinates\n  const features = Object.keys(data); // Feature names\n  const dimensions = features.map(feature => ({\n    range: [Math.min(...data[feature]), Math.max(...data[feature])],\n    label: feature,\n    values: data[feature]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parallel Coordinates Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        type: \"parcoords\",\n        dimensions: dimensions,\n        line: {\n          color: data[features[0]],\n          // Use the first feature as line color\n          colorscale: \"Portland\"\n        }\n      }],\n      layout: {\n        width: 900,\n        height: 600,\n        title: \"Parallel Coordinates Plot\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ParallelCoordinatesPlot, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = ParallelCoordinatesPlot;\nexport default ParallelCoordinatesPlot;\nvar _c;\n$RefreshReg$(_c, \"ParallelCoordinatesPlot\");","map":{"version":3,"names":["React","useState","useEffect","Plot","jsxDEV","_jsxDEV","ParallelCoordinatesPlot","subspaceId","_s","data","setData","loading","setLoading","error","setError","fetchData","console","log","Error","response","fetch","result","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","Object","keys","length","features","dimensions","map","feature","range","Math","min","max","label","values","type","line","colorscale","layout","width","height","title","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/parallelPlot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst ParallelCoordinatesPlot = ({ subspaceId }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Fetching data for Parallel Coordinates Plot for Subspace ID:\", subspaceId);\n        if (!subspaceId) {\n          throw new Error(\"Subspace ID is missing.\");\n        }\n\n        // Fetch the data from the backend\n        const response = await fetch(\n          `http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`\n        );\n        const result = await response.json();\n\n        if (result.data) {\n          setData(result.data); // Store the fetched data\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [subspaceId]);\n\n  if (loading) return <p>Loading Parallel Coordinates Plot...</p>;\n  if (error) return <p style={{ color: \"red\" }}>Error: {error}</p>;\n  if (!data || Object.keys(data).length === 0) return <p>No data available.</p>;\n\n  // Transform the data for Parallel Coordinates\n  const features = Object.keys(data); // Feature names\n  const dimensions = features.map((feature) => ({\n    range: [Math.min(...data[feature]), Math.max(...data[feature])],\n    label: feature,\n    values: data[feature],\n  }));\n\n  return (\n    <div>\n      <h1>Parallel Coordinates Plot</h1>\n      <Plot\n        data={[\n          {\n            type: \"parcoords\",\n            dimensions: dimensions,\n            line: {\n              color: data[features[0]], // Use the first feature as line color\n              colorscale: \"Portland\",\n            },\n          },\n        ]}\n        layout={{\n          width: 900,\n          height: 600,\n          title: \"Parallel Coordinates Plot\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ParallelCoordinatesPlot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}