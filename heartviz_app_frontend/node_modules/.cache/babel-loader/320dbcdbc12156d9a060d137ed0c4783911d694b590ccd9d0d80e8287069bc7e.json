{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/pages/home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const navigate = useNavigate();\n  const [subspaces, setSubspaces] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [newSubspaceName, setNewSubspaceName] = useState('');\n  useEffect(() => {\n    // Retrieve subspaces from localStorage\n    const savedSubspaces = JSON.parse(localStorage.getItem('subspaces')) || [];\n    setSubspaces(savedSubspaces);\n  }, []);\n  const handleCreateSubspace = () => {\n    if (newSubspaceName.trim()) {\n      const newSubspace = {\n        id: Date.now(),\n        name: newSubspaceName,\n        attributes: []\n      };\n      const updatedSubspaces = [...subspaces, newSubspace];\n      setSubspaces(updatedSubspaces);\n      localStorage.setItem('subspaces', JSON.stringify(updatedSubspaces));\n      setNewSubspaceName('');\n      setShowPopup(false);\n      navigate(`/add-subspace?id=${newSubspace.id}`);\n    } else {\n      alert('Please enter a valid subspace name');\n    }\n  };\n  const handleEditSubspace = id => {\n    navigate(`/add-subspace?id=${id}`);\n  };\n  const handleOpenPopup = () => setShowPopup(true);\n  const handleClosePopup = () => setShowPopup(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to HeartViz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenPopup,\n      children: \"Create New Subspace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), subspaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subspaces-list\",\n      children: subspaces.map(subspace => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subspace-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: subspace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditSubspace(subspace.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, subspace.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No subspaces available. Create a new one to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Subspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter subspace name\",\n          value: newSubspaceName,\n          onChange: e => setNewSubspaceName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateSubspace,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClosePopup,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"Rc4X4ldVEGpeX3S2VYDUfb9qQ8k=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","navigate","subspaces","setSubspaces","showPopup","setShowPopup","newSubspaceName","setNewSubspaceName","savedSubspaces","JSON","parse","localStorage","getItem","handleCreateSubspace","trim","newSubspace","id","Date","now","name","attributes","updatedSubspaces","setItem","stringify","alert","handleEditSubspace","handleOpenPopup","handleClosePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","subspace","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/pages/home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction HomePage() {\n    const navigate = useNavigate();\n    const [subspaces, setSubspaces] = useState([]);\n    const [showPopup, setShowPopup] = useState(false);\n    const [newSubspaceName, setNewSubspaceName] = useState('');\n\n    useEffect(() => {\n        // Retrieve subspaces from localStorage\n        const savedSubspaces = JSON.parse(localStorage.getItem('subspaces')) || [];\n        setSubspaces(savedSubspaces);\n    }, []);\n\n    const handleCreateSubspace = () => {\n        if (newSubspaceName.trim()) {\n            const newSubspace = {\n                id: Date.now(),\n                name: newSubspaceName,\n                attributes: [],\n            };\n            const updatedSubspaces = [...subspaces, newSubspace];\n            setSubspaces(updatedSubspaces);\n            localStorage.setItem('subspaces', JSON.stringify(updatedSubspaces));\n            setNewSubspaceName('');\n            setShowPopup(false);\n            navigate(`/add-subspace?id=${newSubspace.id}`);\n        } else {\n            alert('Please enter a valid subspace name');\n        }\n    };\n\n    const handleEditSubspace = (id) => {\n        navigate(`/add-subspace?id=${id}`);\n    };\n\n    const handleOpenPopup = () => setShowPopup(true);\n    const handleClosePopup = () => setShowPopup(false);\n\n    return (\n        <div className=\"home-page\">\n            <h1>Welcome to HeartViz</h1>\n            <button onClick={handleOpenPopup}>Create New Subspace</button>\n            {subspaces.length > 0 ? (\n                <div className=\"subspaces-list\">\n                    {subspaces.map((subspace) => (\n                        <div key={subspace.id} className=\"subspace-item\">\n                            <h2>{subspace.name}</h2>\n                            <button onClick={() => handleEditSubspace(subspace.id)}>Edit</button>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <p>No subspaces available. Create a new one to get started.</p>\n            )}\n\n            {showPopup && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup\">\n                        <h2>Create New Subspace</h2>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter subspace name\"\n                            value={newSubspaceName}\n                            onChange={(e) => setNewSubspaceName(e.target.value)}\n                        />\n                        <div className=\"popup-actions\">\n                            <button onClick={handleCreateSubspace}>Create</button>\n                            <button onClick={handleClosePopup}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1ET,YAAY,CAACK,cAAc,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAIP,eAAe,CAACQ,IAAI,CAAC,CAAC,EAAE;MACxB,MAAMC,WAAW,GAAG;QAChBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEb,eAAe;QACrBc,UAAU,EAAE;MAChB,CAAC;MACD,MAAMC,gBAAgB,GAAG,CAAC,GAAGnB,SAAS,EAAEa,WAAW,CAAC;MACpDZ,YAAY,CAACkB,gBAAgB,CAAC;MAC9BV,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEb,IAAI,CAACc,SAAS,CAACF,gBAAgB,CAAC,CAAC;MACnEd,kBAAkB,CAAC,EAAE,CAAC;MACtBF,YAAY,CAAC,KAAK,CAAC;MACnBJ,QAAQ,CAAC,oBAAoBc,WAAW,CAACC,EAAE,EAAE,CAAC;IAClD,CAAC,MAAM;MACHQ,KAAK,CAAC,oCAAoC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAIT,EAAE,IAAK;IAC/Bf,QAAQ,CAAC,oBAAoBe,EAAE,EAAE,CAAC;EACtC,CAAC;EAED,MAAMU,eAAe,GAAGA,CAAA,KAAMrB,YAAY,CAAC,IAAI,CAAC;EAChD,MAAMsB,gBAAgB,GAAGA,CAAA,KAAMtB,YAAY,CAAC,KAAK,CAAC;EAElD,oBACIP,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB/B,OAAA;MAAA+B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnC,OAAA;MAAQoC,OAAO,EAAER,eAAgB;MAAAG,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7D/B,SAAS,CAACiC,MAAM,GAAG,CAAC,gBACjBrC,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1B3B,SAAS,CAACkC,GAAG,CAAEC,QAAQ,iBACpBvC,OAAA;QAAuB8B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5C/B,OAAA;UAAA+B,QAAA,EAAKQ,QAAQ,CAAClB;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBnC,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMT,kBAAkB,CAACY,QAAQ,CAACrB,EAAE,CAAE;UAAAa,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF/DI,QAAQ,CAACrB,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENnC,OAAA;MAAA+B,QAAA,EAAG;IAAwD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjE,EAEA7B,SAAS,iBACNN,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B/B,OAAA;QAAK8B,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAClB/B,OAAA;UAAA+B,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BnC,OAAA;UACIwC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,qBAAqB;UACjCC,KAAK,EAAElC,eAAgB;UACvBmC,QAAQ,EAAGC,CAAC,IAAKnC,kBAAkB,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACFnC,OAAA;UAAK8B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1B/B,OAAA;YAAQoC,OAAO,EAAErB,oBAAqB;YAAAgB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtDnC,OAAA;YAAQoC,OAAO,EAAEP,gBAAiB;YAAAE,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjC,EAAA,CAzEQD,QAAQ;EAAA,QACIH,WAAW;AAAA;AAAAgD,EAAA,GADvB7C,QAAQ;AA2EjB,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}