{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/clusteringTree/clusteringTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClusteringTreeComponent = ({\n  subspaceId\n}) => {\n  _s();\n  const [treeData, setTreeData] = useState(null);\n  const [error, setError] = useState(null);\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Fetch and transform tree data\n  useEffect(() => {\n    const fetchTreeData = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/hierarchy_cluster?sub_ind=${subspaceId}`);\n        const result = await response.json();\n        console.log(\"Fetched Tree Data:\", result); // Debugging the fetched data\n        setTreeData(result);\n      } catch (err) {\n        console.error(\"Error fetching tree data:\", err);\n        setError(\"Failed to fetch tree data.\");\n      }\n    };\n    fetchTreeData();\n  }, [subspaceId]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  if (!treeData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Clustering Tree...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n\n  // Custom node rendering function with tooltip handling\n  const renderCustomNode = ({\n    nodeDatum,\n    toggleNode\n  }) => /*#__PURE__*/_jsxDEV(\"g\", {\n    onMouseEnter: e => handleMouseEnter(e, nodeDatum),\n    onMouseLeave: handleMouseLeave,\n    onMouseMove: handleMouseMove,\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      r: 10,\n      fill: \"#6B6B6B\",\n      onClick: toggleNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      fill: \"black\",\n      x: 15,\n      children: nodeDatum.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  // Tooltip handlers\n  const handleMouseEnter = (e, nodeDatum) => {\n    const tooltipInfo = `\n      Name: ${nodeDatum.name}\n      ${nodeDatum.type ? `Type: ${nodeDatum.type}` : \"\"}\n      ${nodeDatum.value !== undefined ? `Value: ${nodeDatum.value.toFixed(2)}` : \"\"}\n    `;\n    setTooltipContent(tooltipInfo);\n    setTooltipPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseLeave = () => {\n    setTooltipContent(\"\"); // Hide the tooltip\n  };\n  const handleMouseMove = e => {\n    setTooltipPosition({\n      x: e.clientX,\n      y: e.clientY\n    }); // Update tooltip position\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"600px\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clustering Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      data: treeData,\n      orientation: \"vertical\",\n      pathFunc: \"diagonal\",\n      translate: {\n        x: 400,\n        y: 50\n      },\n      nodeSize: {\n        x: 150,\n        y: 100\n      },\n      renderCustomNodeElement: renderCustomNode // Custom rendering\n      ,\n      initialDepth: 0 // Start tree collapsed (only root expanded)\n      ,\n      styles: {\n        links: {\n          stroke: \"#136F63\",\n          strokeWidth: 2\n        },\n        nodes: {\n          node: {\n            circle: {\n              fill: \"#136F63\"\n            }\n          },\n          leafNode: {\n            circle: {\n              fill: \"#8FCB9B\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), tooltipContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: tooltipPosition.y + 10,\n        left: tooltipPosition.x + 10,\n        backgroundColor: \"white\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        padding: \"8px\",\n        boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n        pointerEvents: \"none\",\n        fontSize: \"12px\"\n      },\n      children: tooltipContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusteringTreeComponent, \"LItosYA6QgAjqnnrAuqsirq/S7s=\");\n_c = ClusteringTreeComponent;\nexport default ClusteringTreeComponent;\nvar _c;\n$RefreshReg$(_c, \"ClusteringTreeComponent\");","map":{"version":3,"names":["React","useEffect","useState","Tree","ReactTooltip","jsxDEV","_jsxDEV","ClusteringTreeComponent","subspaceId","_s","treeData","setTreeData","error","setError","tooltipContent","setTooltipContent","tooltipPosition","setTooltipPosition","x","y","fetchTreeData","response","fetch","result","json","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCustomNode","nodeDatum","toggleNode","onMouseEnter","e","handleMouseEnter","onMouseLeave","handleMouseLeave","onMouseMove","handleMouseMove","r","fill","onClick","name","tooltipInfo","type","value","undefined","toFixed","clientX","clientY","style","width","height","position","data","orientation","pathFunc","translate","nodeSize","renderCustomNodeElement","initialDepth","styles","links","stroke","strokeWidth","nodes","node","circle","leafNode","top","left","backgroundColor","border","borderRadius","padding","boxShadow","pointerEvents","fontSize","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/clusteringTree/clusteringTree.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst ClusteringTreeComponent = ({ subspaceId }) => {\n  const [treeData, setTreeData] = useState(null);\n  const [error, setError] = useState(null);\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  // Fetch and transform tree data\n  useEffect(() => {\n    const fetchTreeData = async () => {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/hierarchy_cluster?sub_ind=${subspaceId}`\n        );\n        const result = await response.json();\n        console.log(\"Fetched Tree Data:\", result); // Debugging the fetched data\n        setTreeData(result);\n      } catch (err) {\n        console.error(\"Error fetching tree data:\", err);\n        setError(\"Failed to fetch tree data.\");\n      }\n    };\n\n    fetchTreeData();\n  }, [subspaceId]);\n\n  if (error) return <div>Error: {error}</div>;\n  if (!treeData) return <div>Loading Clustering Tree...</div>;\n\n  // Custom node rendering function with tooltip handling\n  const renderCustomNode = ({ nodeDatum, toggleNode }) => (\n    <g\n      onMouseEnter={(e) => handleMouseEnter(e, nodeDatum)}\n      onMouseLeave={handleMouseLeave}\n      onMouseMove={handleMouseMove}\n    >\n      {/* Circle for the node */}\n      <circle r={10} fill=\"#6B6B6B\" onClick={toggleNode} />\n      {/* Display the node name */}\n      <text fill=\"black\" x={15}>\n        {nodeDatum.name}\n      </text>\n    </g>\n  );\n\n  // Tooltip handlers\n  const handleMouseEnter = (e, nodeDatum) => {\n    const tooltipInfo = `\n      Name: ${nodeDatum.name}\n      ${nodeDatum.type ? `Type: ${nodeDatum.type}` : \"\"}\n      ${nodeDatum.value !== undefined ? `Value: ${nodeDatum.value.toFixed(2)}` : \"\"}\n    `;\n    setTooltipContent(tooltipInfo);\n    setTooltipPosition({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseLeave = () => {\n    setTooltipContent(\"\"); // Hide the tooltip\n  };\n\n  const handleMouseMove = (e) => {\n    setTooltipPosition({ x: e.clientX, y: e.clientY }); // Update tooltip position\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"600px\", position: \"relative\" }}>\n      <h2>Clustering Tree</h2>\n      <Tree\n        data={treeData}\n        orientation=\"vertical\"\n        pathFunc=\"diagonal\"\n        translate={{ x: 400, y: 50 }}\n        nodeSize={{ x: 150, y: 100 }}\n        renderCustomNodeElement={renderCustomNode} // Custom rendering\n        initialDepth={0} // Start tree collapsed (only root expanded)\n        styles={{\n          links: { stroke: \"#136F63\", strokeWidth: 2 },\n          nodes: {\n            node: { circle: { fill: \"#136F63\" } },\n            leafNode: { circle: { fill: \"#8FCB9B\" } },\n          },\n        }}\n      />\n      {/* Tooltip */}\n      {tooltipContent && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: tooltipPosition.y + 10,\n            left: tooltipPosition.x + 10,\n            backgroundColor: \"white\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            padding: \"8px\",\n            boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n            pointerEvents: \"none\",\n            fontSize: \"12px\",\n          }}\n        >\n          {tooltipContent}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClusteringTreeComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}