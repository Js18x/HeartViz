{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CorrelationMatrixHeatmap = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const subspaceId = searchParams.get(\"id\");\n  useEffect(() => {\n    const fetchCorrelationMatrix = async () => {\n      try {\n        console.log(\"Subspace ID being sent:\", subspaceId);\n        if (!subspaceId) {\n          throw new Error(\"Subspace ID is missing from the URL.\");\n        }\n        const response = await fetch(`http://127.0.0.1:5000/correlation_matrix?sub_ind=${subspaceId}`);\n        console.log(\"API call URL:\", `http://127.0.0.1:5000/correlation_matrix?sub_ind=${subspaceId}`);\n        const data = await response.json();\n        console.log(\"Response data:\", data);\n        if (data.correlation_matrix) {\n          setMatrixData(data.correlation_matrix);\n        } else {\n          throw new Error(data.error || \"Failed to fetch correlation matrix.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCorrelationMatrix();\n  }, [subspaceId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading correlation matrix...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching the correlation matrix: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (!matrixData || Object.keys(matrixData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No correlation matrix data available for the selected subspace.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  const features = Object.keys(matrixData);\n\n  // Create a custom zValues matrix with diagonals set to NaN\n  const zValues = features.map((rowKey, rowIndex) => features.map((colKey, colIndex) => rowIndex === colIndex ? NaN : matrixData[rowKey][colKey]));\n\n  // Create a mask for rendering diagonal elements in a lighter grey\n  const zMask = features.map((rowKey, rowIndex) => features.map((colKey, colIndex) => rowIndex === colIndex ? 1 : NaN));\n  const zTooltip = features.map((rowKey, rowIndex) => features.map((colKey, colIndex) => rowIndex === colIndex ? \"Self-correlation\" : `Correlation: ${matrixData[rowKey][colKey].toFixed(2)}`));\n  const handleClick = (row, col) => {\n    if (onMatrixClick) {\n      onMatrixClick(features[col], features[row]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        z: zValues,\n        x: features,\n        y: features,\n        text: zTooltip,\n        hoverinfo: \"text\",\n        type: \"heatmap\",\n        colorscale: \"Portland\",\n        reversescale: true,\n        zmid: 0,\n        zmin: -1,\n        zmax: 1,\n        showscale: true\n      }, {\n        z: zMask,\n        x: features,\n        y: features,\n        type: \"heatmap\",\n        colorscale: [[0, \"lightgrey\"], [1, \"lightgrey\"]],\n        showscale: false,\n        hoverinfo: \"text\",\n        text: zTooltip\n      }],\n      layout: {\n        width: 700,\n        height: 700,\n        plot_bgcolor: \"rgba(0,0,0,0)\",\n        paper_bgcolor: \"rgba(0,0,0,0)\",\n        margin: {\n          l: 80,\n          r: 40,\n          t: 40,\n          b: 40\n        }\n      },\n      config: {\n        onClick: data => {\n          const {\n            points\n          } = data;\n          if (points && points[0]) {\n            const {\n              x,\n              y\n            } = points[0];\n            handleClick(y, x); // Row and column mapping\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(CorrelationMatrixHeatmap, \"xCfJHIZZyzT/kQGMDs6JpWJ/Ye4=\", false, function () {\n  return [useSearchParams];\n});\n_c = CorrelationMatrixHeatmap;\nexport default CorrelationMatrixHeatmap;\nvar _c;\n$RefreshReg$(_c, \"CorrelationMatrixHeatmap\");","map":{"version":3,"names":["React","useState","useEffect","Plot","useSearchParams","jsxDEV","_jsxDEV","CorrelationMatrixHeatmap","_s","matrixData","setMatrixData","loading","setLoading","error","setError","searchParams","subspaceId","get","fetchCorrelationMatrix","console","log","Error","response","fetch","data","json","correlation_matrix","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","features","zValues","map","rowKey","rowIndex","colKey","colIndex","NaN","zMask","zTooltip","toFixed","handleClick","row","col","onMatrixClick","z","x","y","text","hoverinfo","type","colorscale","reversescale","zmid","zmin","zmax","showscale","layout","width","height","plot_bgcolor","paper_bgcolor","margin","l","r","t","b","config","onClick","points","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst CorrelationMatrixHeatmap = () => {\n  const [matrixData, setMatrixData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [searchParams] = useSearchParams();\n  const subspaceId = searchParams.get(\"id\");\n\n  useEffect(() => {\n    const fetchCorrelationMatrix = async () => {\n      try {\n        console.log(\"Subspace ID being sent:\", subspaceId);\n        if (!subspaceId) {\n          throw new Error(\"Subspace ID is missing from the URL.\");\n        }\n\n        const response = await fetch(\n          `http://127.0.0.1:5000/correlation_matrix?sub_ind=${subspaceId}`\n        );\n        console.log(\n          \"API call URL:\",\n          `http://127.0.0.1:5000/correlation_matrix?sub_ind=${subspaceId}`\n        );\n        const data = await response.json();\n\n        console.log(\"Response data:\", data);\n        if (data.correlation_matrix) {\n          setMatrixData(data.correlation_matrix);\n        } else {\n          throw new Error(data.error || \"Failed to fetch correlation matrix.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCorrelationMatrix();\n  }, [subspaceId]);\n\n  if (loading) {\n    return <div className=\"loading-spinner\">Loading correlation matrix...</div>;\n  }\n\n  if (error) {\n    return <p>Error fetching the correlation matrix: {error}</p>;\n  }\n\n  if (!matrixData || Object.keys(matrixData).length === 0) {\n    return (\n      <p>No correlation matrix data available for the selected subspace.</p>\n    );\n  }\n\n  const features = Object.keys(matrixData);\n\n  // Create a custom zValues matrix with diagonals set to NaN\n  const zValues = features.map((rowKey, rowIndex) =>\n    features.map((colKey, colIndex) =>\n      rowIndex === colIndex ? NaN : matrixData[rowKey][colKey]\n    )\n  );\n\n  // Create a mask for rendering diagonal elements in a lighter grey\n  const zMask = features.map((rowKey, rowIndex) =>\n    features.map((colKey, colIndex) => (rowIndex === colIndex ? 1 : NaN))\n  );\n\n  const zTooltip = features.map((rowKey, rowIndex) =>\n    features.map((colKey, colIndex) =>\n      rowIndex === colIndex\n        ? \"Self-correlation\"\n        : `Correlation: ${matrixData[rowKey][colKey].toFixed(2)}`\n    )\n  );\n\n  const handleClick = (row, col) => {\n    if (onMatrixClick) {\n      onMatrixClick(features[col], features[row]);\n    }\n  };\n\n  return (\n    <div>\n      <Plot\n        data={[\n          {\n            z: zValues,\n            x: features,\n            y: features,\n            text: zTooltip,\n            hoverinfo: \"text\",\n            type: \"heatmap\",\n            colorscale: \"Portland\",\n            reversescale: true,\n            zmid: 0,\n            zmin: -1,\n            zmax: 1,\n            showscale: true,\n          },\n          {\n            z: zMask,\n            x: features,\n            y: features,\n            type: \"heatmap\",\n            colorscale: [\n              [0, \"lightgrey\"],\n              [1, \"lightgrey\"],\n            ],\n            showscale: false,\n            hoverinfo: \"text\",\n            text: zTooltip,\n          },\n        ]}\n        layout={{\n          width: 700,\n          height: 700,\n          plot_bgcolor: \"rgba(0,0,0,0)\",\n          paper_bgcolor: \"rgba(0,0,0,0)\",\n          margin: {\n            l: 80,\n            r: 40,\n            t: 40,\n            b: 40,\n          },\n        }}\n        config={{\n          onClick: (data) => {\n            const { points } = data;\n            if (points && points[0]) {\n              const { x, y } = points[0];\n              handleClick(y, x); // Row and column mapping\n            }\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CorrelationMatrixHeatmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}