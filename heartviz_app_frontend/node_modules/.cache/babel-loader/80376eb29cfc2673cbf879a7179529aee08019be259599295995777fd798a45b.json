{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/radar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadarChart = ({\n  subspaceId\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!subspaceId) throw new Error(\"Subspace ID is missing.\");\n        const response = await fetch(`http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`);\n        const result = await response.json();\n        if (result.data) {\n          const rawData = result.data;\n\n          // Convert rawData to a usable radar chart format\n          const radarData = Object.keys(rawData).map(key => ({\n            name: key,\n            values: rawData[key]\n          }));\n          setData(radarData);\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [subspaceId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Radar Chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  if (!data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available for the Radar Chart.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 28\n  }, this);\n\n  // Radar chart data preparation\n  const radarTraces = data.map(attribute => ({\n    type: \"scatterpolar\",\n    r: attribute.values,\n    theta: Object.keys(data[0].values),\n    // Assume all attributes have the same length\n    fill: \"toself\",\n    name: attribute.name\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Radar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plot, {\n      data: radarTraces,\n      layout: {\n        polar: {\n          radialaxis: {\n            visible: true,\n            range: [0, Math.max(...data.flatMap(d => d.values))]\n          }\n        },\n        showlegend: true,\n        title: \"Radar Chart Overview\",\n        width: 700,\n        height: 700\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RadarChart, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = RadarChart;\nexport default RadarChart;\nvar _c;\n$RefreshReg$(_c, \"RadarChart\");","map":{"version":3,"names":["React","useEffect","useState","Plot","jsxDEV","_jsxDEV","RadarChart","subspaceId","_s","data","setData","loading","setLoading","error","setError","fetchData","Error","response","fetch","result","json","rawData","radarData","Object","keys","map","key","name","values","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","radarTraces","attribute","type","r","theta","fill","layout","polar","radialaxis","visible","range","Math","max","flatMap","d","showlegend","title","width","height","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/parallelPlot/radar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst RadarChart = ({ subspaceId }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!subspaceId) throw new Error(\"Subspace ID is missing.\");\n        const response = await fetch(\n          `http://127.0.0.1:5000/fetch_data_with_features?sub_ind=${subspaceId}`\n        );\n        const result = await response.json();\n\n        if (result.data) {\n          const rawData = result.data;\n\n          // Convert rawData to a usable radar chart format\n          const radarData = Object.keys(rawData).map((key) => ({\n            name: key,\n            values: rawData[key],\n          }));\n\n          setData(radarData);\n        } else {\n          throw new Error(result.error || \"Failed to fetch data.\");\n        }\n      } catch (err) {\n        setError(err.message || \"An unknown error occurred.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [subspaceId]);\n\n  if (loading) return <div>Loading Radar Chart...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!data.length) return <div>No data available for the Radar Chart.</div>;\n\n  // Radar chart data preparation\n  const radarTraces = data.map((attribute) => ({\n    type: \"scatterpolar\",\n    r: attribute.values,\n    theta: Object.keys(data[0].values), // Assume all attributes have the same length\n    fill: \"toself\",\n    name: attribute.name,\n  }));\n\n  return (\n    <div>\n      <h2>Radar Chart</h2>\n      <Plot\n        data={radarTraces}\n        layout={{\n          polar: {\n            radialaxis: {\n              visible: true,\n              range: [0, Math.max(...data.flatMap((d) => d.values))],\n            },\n          },\n          showlegend: true,\n          title: \"Radar Chart Overview\",\n          width: 700,\n          height: 700,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RadarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}