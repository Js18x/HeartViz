{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport mockCorrelationMatrix from \"../../mockDataM.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CorrelationMatrixHeatmap = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState(null);\n  useEffect(() => {\n    // Simulate API call by loading mock data\n    setMatrixData(mockCorrelationMatrix.correlation_matrix);\n  }, []);\n  if (!matrixData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract feature names and matrix values\n  const features = Object.keys(matrixData);\n  const zValues = features.map(rowKey => features.map(colKey => matrixData[rowKey][colKey]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Correlation Matrix Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        z: zValues,\n        x: features,\n        // Columns\n        y: features,\n        // Rows\n        type: \"heatmap\",\n        colorscale: \"RdBu\",\n        // Red to blue scale\n        reversescale: true,\n        // Reverse the scale to match your example\n        zmid: 0 // Center the scale around 0\n      }],\n      layout: {\n        title: \"Correlation Matrix\",\n        xaxis: {\n          title: \"Features\",\n          side: \"bottom\"\n        },\n        yaxis: {\n          title: \"Features\",\n          automargin: true\n        },\n        width: 700,\n        height: 700\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CorrelationMatrixHeatmap, \"RFuUktl3r5tXcb6zOsxs5ilumDw=\");\n_c = CorrelationMatrixHeatmap;\nexport default CorrelationMatrixHeatmap;\nvar _c;\n$RefreshReg$(_c, \"CorrelationMatrixHeatmap\");","map":{"version":3,"names":["React","useState","useEffect","Plot","mockCorrelationMatrix","jsxDEV","_jsxDEV","CorrelationMatrixHeatmap","_s","matrixData","setMatrixData","correlation_matrix","children","fileName","_jsxFileName","lineNumber","columnNumber","features","Object","keys","zValues","map","rowKey","colKey","data","z","x","y","type","colorscale","reversescale","zmid","layout","title","xaxis","side","yaxis","automargin","width","height","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/heatmap/heatmap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport mockCorrelationMatrix from \"../../mockDataM.json\";\n\nconst CorrelationMatrixHeatmap = () => {\n  const [matrixData, setMatrixData] = useState(null);\n\n  useEffect(() => {\n    // Simulate API call by loading mock data\n    setMatrixData(mockCorrelationMatrix.correlation_matrix);\n  }, []);\n\n  if (!matrixData) {\n    return <p>Loading...</p>;\n  }\n\n  // Extract feature names and matrix values\n  const features = Object.keys(matrixData);\n  const zValues = features.map((rowKey) =>\n    features.map((colKey) => matrixData[rowKey][colKey])\n  );\n\n  return (\n    <div>\n      <h1>Correlation Matrix Heatmap</h1>\n      <Plot\n        data={[\n          {\n            z: zValues,\n            x: features, // Columns\n            y: features, // Rows\n            type: \"heatmap\",\n            colorscale: \"RdBu\", // Red to blue scale\n            reversescale: true, // Reverse the scale to match your example\n            zmid: 0, // Center the scale around 0\n          },\n        ]}\n        layout={{\n          title: \"Correlation Matrix\",\n          xaxis: {\n            title: \"Features\",\n            side: \"bottom\",\n          },\n          yaxis: {\n            title: \"Features\",\n            automargin: true,\n          },\n          width: 700,\n          height: 700,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CorrelationMatrixHeatmap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,qBAAqB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACAQ,aAAa,CAACN,qBAAqB,CAACO,kBAAkB,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,UAAU,EAAE;IACf,oBAAOH,OAAA;MAAAM,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;;EAEA;EACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACV,UAAU,CAAC;EACxC,MAAMW,OAAO,GAAGH,QAAQ,CAACI,GAAG,CAAEC,MAAM,IAClCL,QAAQ,CAACI,GAAG,CAAEE,MAAM,IAAKd,UAAU,CAACa,MAAM,CAAC,CAACC,MAAM,CAAC,CACrD,CAAC;EAED,oBACEjB,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCV,OAAA,CAACH,IAAI;MACHqB,IAAI,EAAE,CACJ;QACEC,CAAC,EAAEL,OAAO;QACVM,CAAC,EAAET,QAAQ;QAAE;QACbU,CAAC,EAAEV,QAAQ;QAAE;QACbW,IAAI,EAAE,SAAS;QACfC,UAAU,EAAE,MAAM;QAAE;QACpBC,YAAY,EAAE,IAAI;QAAE;QACpBC,IAAI,EAAE,CAAC,CAAE;MACX,CAAC,CACD;MACFC,MAAM,EAAE;QACNC,KAAK,EAAE,oBAAoB;QAC3BC,KAAK,EAAE;UACLD,KAAK,EAAE,UAAU;UACjBE,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLH,KAAK,EAAE,UAAU;UACjBI,UAAU,EAAE;QACd,CAAC;QACDC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;MACV;IAAE;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACR,EAAA,CAjDID,wBAAwB;AAAAiC,EAAA,GAAxBjC,wBAAwB;AAmD9B,eAAeA,wBAAwB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}