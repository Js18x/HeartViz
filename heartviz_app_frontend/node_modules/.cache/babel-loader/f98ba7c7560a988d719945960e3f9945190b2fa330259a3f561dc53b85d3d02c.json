{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilterEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./catFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryFilterEdit({\n  name,\n  range,\n  onFilterChange,\n  defaultFilter = []\n}) {\n  _s();\n  const categories = Array.from({\n    length: range[1] - range[0] + 1\n  }, (_, i) => range[0] + i);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  useEffect(() => {\n    setSelectedCategories(defaultFilter); // Initialize with saved filter\n  }, [defaultFilter]);\n  const handleCategoryChange = category => {\n    const updatedCategories = selectedCategories.includes(category) ? selectedCategories.filter(c => c !== category) : [...selectedCategories, category];\n    setSelectedCategories(updatedCategories);\n    onFilterChange(name, updatedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCategories.includes(category),\n          onChange: () => handleCategoryChange(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), category]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryFilterEdit, \"Q4cuh5xq9SH0gjoW9/NTjbt4wng=\");\n_c = CategoryFilterEdit;\nexport default CategoryFilterEdit;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilterEdit\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CategoryFilterEdit","name","range","onFilterChange","defaultFilter","_s","categories","Array","from","length","_","i","selectedCategories","setSelectedCategories","handleCategoryChange","category","updatedCategories","includes","filter","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/filters/catFilterEdit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./catFilter.css\";\n\nfunction CategoryFilterEdit({ name, range, onFilterChange, defaultFilter = [] }) {\n  const categories = Array.from(\n    { length: range[1] - range[0] + 1 },\n    (_, i) => range[0] + i\n  );\n\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  useEffect(() => {\n    setSelectedCategories(defaultFilter); // Initialize with saved filter\n  }, [defaultFilter]);\n\n  const handleCategoryChange = (category) => {\n    const updatedCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter((c) => c !== category)\n      : [...selectedCategories, category];\n\n    setSelectedCategories(updatedCategories);\n    onFilterChange(name, updatedCategories);\n  };\n\n  return (\n    <div className=\"filter\">\n      <h3>{name}</h3>\n      <div>\n        {categories.map((category) => (\n          <label key={category}>\n            <input\n              type=\"checkbox\"\n              checked={selectedCategories.includes(category)}\n              onChange={() => handleCategoryChange(category)}\n            />\n            {category}\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryFilterEdit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,kBAAkBA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,cAAc;EAAEC,aAAa,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC/E,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAC3B;IAAEC,MAAM,EAAEP,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG;EAAE,CAAC,EACnC,CAACQ,CAAC,EAAEC,CAAC,KAAKT,KAAK,CAAC,CAAC,CAAC,GAAGS,CACvB,CAAC;EAED,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACdgB,qBAAqB,CAACT,aAAa,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMU,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,MAAMC,iBAAiB,GAAGJ,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAC,GAC3DH,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,QAAQ,CAAC,GAChD,CAAC,GAAGH,kBAAkB,EAAEG,QAAQ,CAAC;IAErCF,qBAAqB,CAACG,iBAAiB,CAAC;IACxCb,cAAc,CAACF,IAAI,EAAEe,iBAAiB,CAAC;EACzC,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBtB,OAAA;MAAAsB,QAAA,EAAKpB;IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACf1B,OAAA;MAAAsB,QAAA,EACGf,UAAU,CAACoB,GAAG,CAAEX,QAAQ,iBACvBhB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEhB,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAE;UAC/Cc,QAAQ,EAAEA,CAAA,KAAMf,oBAAoB,CAACC,QAAQ;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,EACDV,QAAQ;MAAA,GANCA,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAtCQL,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAwC3B,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}