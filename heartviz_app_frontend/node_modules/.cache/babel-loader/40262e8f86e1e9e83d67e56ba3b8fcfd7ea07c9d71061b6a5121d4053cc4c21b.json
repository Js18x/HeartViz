{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/distributionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DistributionPlot = ({\n  subspaceId\n}) => {\n  _s();\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\"); // Default to global distribution\n  const [attributes, setAttributes] = useState([]);\n  const [binSize, setBinSize] = useState(10); // Default bin size\n  const [tempBinSize, setTempBinSize] = useState(\"10\"); // Temporary input state for bin size\n  const [globalDistribution, setGlobalDistribution] = useState(null);\n  const [labelWiseDistribution, setLabelWiseDistribution] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch available attributes\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: {\n            sub_ind: subspaceId\n          }\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]); // Default to the first attribute\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n    fetchAttributes();\n  }, [subspaceId]);\n  useEffect(() => {\n    if (attribute) {\n      // Fetch global distribution\n      const fetchGlobalDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspaceId,\n              feature: attribute,\n              by_label: false\n            }\n          });\n          setGlobalDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch global distribution.\");\n        }\n      };\n\n      // Fetch label-wise distribution\n      const fetchLabelWiseDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: {\n              sub_ind: subspaceId,\n              feature: attribute,\n              by_label: true\n            }\n          });\n          setLabelWiseDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch label-wise distribution.\");\n        }\n      };\n      fetchGlobalDistribution();\n      fetchLabelWiseDistribution();\n    }\n  }, [attribute, subspaceId]);\n  const handleBinSizeChange = e => {\n    setTempBinSize(e.target.value); // Allow user to edit freely\n  };\n  const handleBinSizeBlur = () => {\n    const value = parseInt(tempBinSize, 10);\n    if (!value || value <= 0) {\n      setBinSize(1); // Set to minimum value\n      setTempBinSize(\"1\");\n    } else {\n      setBinSize(value);\n      setTempBinSize(String(value));\n    }\n  };\n  const plotData = () => {\n    if (!attribute) return [];\n    let data = globalDistribution;\n    if (label !== \"global\" && labelWiseDistribution[label]) {\n      data = labelWiseDistribution[label];\n    }\n    if (!data) return [];\n\n    // Binning logic\n    const keys = Object.keys(data).map(k => parseFloat(k));\n    const min = Math.min(...keys);\n    const max = Math.max(...keys);\n    const bins = Math.ceil((max - min) / binSize);\n    const binEdges = Array.from({\n      length: bins + 1\n    }, (_, i) => min + i * binSize);\n    const binCounts = Array(bins).fill(0);\n    keys.forEach(key => {\n      const binIndex = Math.min(Math.floor((key - min) / binSize), bins - 1);\n      binCounts[binIndex] += data[key];\n    });\n    return [{\n      x: binEdges.slice(0, -1).map((edge, i) => `${edge.toFixed(2)} - ${(edge + binSize).toFixed(2)}`),\n      y: binCounts,\n      type: \"scatter\",\n      // Change to scatter\n      mode: \"markers+lines\",\n      // Combines markers with lines\n      marker: {\n        color: \"red\",\n        // Change color\n        size: 8,\n        // Adjust size\n        symbol: \"diamond\" // Change marker symbol\n      },\n      line: {\n        shape: \"spline\",\n        // Smooth line\n        color: \"orange\"\n      }\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Attribute:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: attribute,\n        onChange: e => setAttribute(e.target.value),\n        children: attributes.map(attr => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: attr,\n          children: attr\n        }, attr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"global\",\n          children: \"Global\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), Object.keys(labelWiseDistribution).map(lbl => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lbl,\n          children: [\"Label \", lbl]\n        }, lbl, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\",\n          marginRight: \"10px\"\n        },\n        children: \"Bin Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tempBinSize,\n        onChange: handleBinSizeChange,\n        onBlur: handleBinSizeBlur,\n        style: {\n          width: \"60px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), plotData().length > 0 && /*#__PURE__*/_jsxDEV(Plot, {\n      data: plotData(),\n      layout: {\n        title: `Distribution of ${attribute} in relation to ${label === \"global\" ? \"Global\" : `severity rate ${label}`}`,\n        xaxis: {\n          title: {\n            text: attribute,\n            standoff: 40\n          },\n          tickangle: 45\n        },\n        yaxis: {\n          title: \"Number of diagnoses\"\n        },\n        margin: {\n          b: 100\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(DistributionPlot, \"tld4HmZGHvC6rY+J+30eszqv0Uk=\");\n_c = DistributionPlot;\nexport default DistributionPlot;\nvar _c;\n$RefreshReg$(_c, \"DistributionPlot\");","map":{"version":3,"names":["React","useState","useEffect","Plot","axios","jsxDEV","_jsxDEV","DistributionPlot","subspaceId","_s","attribute","setAttribute","label","setLabel","attributes","setAttributes","binSize","setBinSize","tempBinSize","setTempBinSize","globalDistribution","setGlobalDistribution","labelWiseDistribution","setLabelWiseDistribution","error","setError","fetchAttributes","response","get","params","sub_ind","Object","keys","data","feature_ranges","err","fetchGlobalDistribution","feature","by_label","fetchLabelWiseDistribution","handleBinSizeChange","e","target","value","handleBinSizeBlur","parseInt","String","plotData","map","k","parseFloat","min","Math","max","bins","ceil","binEdges","Array","from","length","_","i","binCounts","fill","forEach","key","binIndex","floor","x","slice","edge","toFixed","y","type","mode","marker","color","size","symbol","line","shape","style","textAlign","padding","children","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","attr","marginLeft","lbl","onBlur","width","layout","title","xaxis","text","standoff","tickangle","yaxis","margin","b","_c","$RefreshReg$"],"sources":["/Users/js/Desktop/HeartViz/heartviz_app_frontend/src/components/distribution/distributionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\n\nconst DistributionPlot = ({ subspaceId }) => {\n  const [attribute, setAttribute] = useState(\"\");\n  const [label, setLabel] = useState(\"global\"); // Default to global distribution\n  const [attributes, setAttributes] = useState([]);\n  const [binSize, setBinSize] = useState(10); // Default bin size\n  const [tempBinSize, setTempBinSize] = useState(\"10\"); // Temporary input state for bin size\n  const [globalDistribution, setGlobalDistribution] = useState(null);\n  const [labelWiseDistribution, setLabelWiseDistribution] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch available attributes\n    const fetchAttributes = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/feature_ranges\", {\n          params: { sub_ind: subspaceId },\n        });\n        const attributes = Object.keys(response.data.feature_ranges);\n        setAttributes(attributes);\n        setAttribute(attributes[0]); // Default to the first attribute\n      } catch (err) {\n        setError(\"Failed to fetch attributes.\");\n      }\n    };\n\n    fetchAttributes();\n  }, [subspaceId]);\n\n  useEffect(() => {\n    if (attribute) {\n      // Fetch global distribution\n      const fetchGlobalDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: { sub_ind: subspaceId, feature: attribute, by_label: false },\n          });\n          setGlobalDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch global distribution.\");\n        }\n      };\n\n      // Fetch label-wise distribution\n      const fetchLabelWiseDistribution = async () => {\n        try {\n          const response = await axios.get(\"http://127.0.0.1:5000/distribution_by_feature\", {\n            params: { sub_ind: subspaceId, feature: attribute, by_label: true },\n          });\n          setLabelWiseDistribution(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch label-wise distribution.\");\n        }\n      };\n\n      fetchGlobalDistribution();\n      fetchLabelWiseDistribution();\n    }\n  }, [attribute, subspaceId]);\n\n  const handleBinSizeChange = (e) => {\n    setTempBinSize(e.target.value); // Allow user to edit freely\n  };\n\n  const handleBinSizeBlur = () => {\n    const value = parseInt(tempBinSize, 10);\n    if (!value || value <= 0) {\n      setBinSize(1); // Set to minimum value\n      setTempBinSize(\"1\");\n    } else {\n      setBinSize(value);\n      setTempBinSize(String(value));\n    }\n  };\n\n  const plotData = () => {\n    if (!attribute) return [];\n\n    let data = globalDistribution;\n    if (label !== \"global\" && labelWiseDistribution[label]) {\n      data = labelWiseDistribution[label];\n    }\n\n    if (!data) return [];\n\n    // Binning logic\n    const keys = Object.keys(data).map((k) => parseFloat(k));\n    const min = Math.min(...keys);\n    const max = Math.max(...keys);\n    const bins = Math.ceil((max - min) / binSize);\n\n    const binEdges = Array.from({ length: bins + 1 }, (_, i) => min + i * binSize);\n    const binCounts = Array(bins).fill(0);\n\n    keys.forEach((key) => {\n      const binIndex = Math.min(Math.floor((key - min) / binSize), bins - 1);\n      binCounts[binIndex] += data[key];\n    });\n\n    return [\n      {\n        x: binEdges.slice(0, -1).map((edge, i) => `${edge.toFixed(2)} - ${(edge + binSize).toFixed(2)}`),\n        y: binCounts,\n        type: \"scatter\", // Change to scatter\n        mode: \"markers+lines\", // Combines markers with lines\n        marker: {\n          color: \"red\", // Change color\n          size: 8, // Adjust size\n          symbol: \"diamond\", // Change marker symbol\n        },\n        line: {\n          shape: \"spline\", // Smooth line\n          color: \"orange\",\n        },\n      },\n    ];\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <div style={{ marginBottom: \"20px\" }}>\n        <label style={{ marginRight: \"10px\" }}>Attribute:</label>\n        <select value={attribute} onChange={(e) => setAttribute(e.target.value)}>\n          {attributes.map((attr) => (\n            <option key={attr} value={attr}>\n              {attr}\n            </option>\n          ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Label:</label>\n        <select value={label} onChange={(e) => setLabel(e.target.value)}>\n          <option value=\"global\">Global</option>\n          {Object.keys(labelWiseDistribution).map((lbl) => (\n            <option key={lbl} value={lbl}>\n              Label {lbl}\n            </option>\n          ))}\n        </select>\n        <label style={{ marginLeft: \"20px\", marginRight: \"10px\" }}>Bin Size:</label>\n        <input\n          type=\"number\"\n          value={tempBinSize}\n          onChange={handleBinSizeChange}\n          onBlur={handleBinSizeBlur}\n          style={{ width: \"60px\" }}\n        />\n      </div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {plotData().length > 0 && (\n        <Plot\n          data={plotData()}\n          layout={{\n            title: `Distribution of ${attribute} in relation to ${label === \"global\" ? \"Global\" : `severity rate ${label}`}`,\n            xaxis: {\n              title: { text: attribute, standoff: 40 },\n              tickangle: 45,\n            },\n            yaxis: {\n              title: \"Number of diagnoses\",\n            },\n            margin: { b: 100 },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DistributionPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}